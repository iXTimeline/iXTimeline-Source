{"remainingRequest":"C:\\Users\\matthew.argao\\Documents\\GitHub\\iXTimeline-Source\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\matthew.argao\\Documents\\GitHub\\iXTimeline-Source\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\matthew.argao\\Documents\\GitHub\\iXTimeline-Source\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\matthew.argao\\Documents\\GitHub\\iXTimeline-Source\\src\\views\\Dashboard - Copy.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\matthew.argao\\Documents\\GitHub\\iXTimeline-Source\\src\\views\\Dashboard - Copy.vue","mtime":1562896867188},{"path":"C:\\Users\\matthew.argao\\Documents\\GitHub\\iXTimeline-Source\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562854784048},{"path":"C:\\Users\\matthew.argao\\Documents\\GitHub\\iXTimeline-Source\\node_modules\\babel-loader\\lib\\index.js","mtime":1562854783619},{"path":"C:\\Users\\matthew.argao\\Documents\\GitHub\\iXTimeline-Source\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562854784048},{"path":"C:\\Users\\matthew.argao\\Documents\\GitHub\\iXTimeline-Source\\node_modules\\vue-loader\\lib\\index.js","mtime":1562854798254}],"contextDependencies":[],"result":["import _toConsumableArray from \"C:\\\\Users\\\\matthew.argao\\\\Documents\\\\GitHub\\\\iXTimeline-Source\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport processData from \"../assets/PROCESS.json\";\nimport registryData from \"../assets/REGISTRY.json\";\nimport parentRegistryData from \"../assets/ParentRegistries.json\";\nimport childRegistryData from \"../assets/ChildRegistries.json\";\nimport parentProcessData from \"../assets/PROCESS.json\";\nimport childProcessData from \"../assets/ChildProcess.json\";\nexport default {\n  data: function data() {\n    return {\n      filters: {\n        itemtype: {\n          account: false,\n          audit: false,\n          bill: false,\n          business_alert: false,\n          CDR_file: false,\n          connect: false,\n          cycle: false,\n          data_file: false,\n          database: false,\n          external_data_warehouse: false,\n          extract: false,\n          finance: false,\n          import_export: false,\n          infrastructure_test: false,\n          ixinsight: false,\n          notification: false,\n          performance_metric: false,\n          route_guide: false,\n          standardized_CDR: false,\n          switch_upload: false,\n          system_audit: false,\n          trade: false,\n          write_off: false\n        }\n      },\n      itemTypes: ['All', 'Account', 'Audit', 'Bill', 'Business Alert', 'CDR File', 'Connect', 'Cycle', 'Data File', 'Database', 'External Data Warehouse', 'Extract', 'Finance', 'Import/Export', 'Infrastructure Test', 'iXInsight', 'Notification', 'Performance Metric', 'Route Guide', 'Standardized CDR', 'Switch Upload', 'System Audit', 'Trade', 'Write Off'],\n      databases: ['ixAdmin_Audit', 'ixAdmin_Main', 'ixAdmin_Port', 'ixAdmin_Report', 'ixAlert_Audit', 'ixAlert_Main', 'ixAlert_Mart', 'ixAudit_Audit', 'ixAudit_Main', 'ixAudit_Port', 'ixControl_Audit', 'ixControl_Client', 'ixControl_Main', 'ixControl_Port', 'ixControl_Report', 'ixControl_Utilities', 'ixCore_Audit', 'ixCore_Main', 'ixCore_Port', 'ixMart', 'ixReport_Audit', 'ixReport_Main', 'ixReport_Port', 'ixRoute_Audit', 'ixRoute_Main', 'ixRoute_Port', 'ixRoute_Report', 'ixSubscription_Main', 'ixSum', 'ixTrade_Main', 'ixTrade_Port', 'ixTrade_Audit', 'ixAEP', 'ixTranslate_Main', 'ixTranslate_Port', 'ixBill_Audit', 'ixBill_Main', 'ixBill_Port', 'ixAudit_Report', 'ixCDR_01', 'ixCDR_02', 'ixCDR_03', 'ixCDR_04', 'ixCDR_05', 'ixCDR_06', 'ixCDR_07', 'ixCDR_08', 'ixCDR_nnn', 'ixTemp', 'ixTranslate_Audit', 'ixUpload_Main', 'ixFinance_Main', 'ixFinance_Port_FT', 'ixQOS', 'ixInsight_Main', 'ixInsight_Mart', 'ixFinance_Audit', 'ixFinance_Port_ATT', 'ixFinance_Port', 'ixArchive', 'ixMart_CDR', 'ixDataLoader_INCR', 'ixDataLoader_INIT', 'ixDataLoader_Main', 'ixSubscriber_Main', 'ixSubscriber_Audit'],\n      servers: ['Coreserver', 'Reportserver', 'Batchserver', 'CDRServer01', 'CDRServer02'],\n      drawTimeline: true,\n      selectedDate: '2019-06-01',\n      displayCalendar: false,\n      isLoading: true,\n      activeItemTypeFilters: [],\n      activeDatabaseFilters: [],\n      activeServerFilters: [],\n      chartData: [],\n      parentRegistryData: parentRegistryData,\n      childRegistryData: childRegistryData,\n      parentProcessData: parentProcessData,\n      childProcessData: childProcessData,\n      chartOptions: {\n        hAxis: {\n          minValue: new Date('2019-06-01'),\n          maxValue: new Date('2019-06-02')\n        }\n      },\n      processData: processData,\n      registryData: registryData,\n      activeData: [3719751],\n      tabs: 0,\n      list: {\n        0: false,\n        1: false,\n        2: false\n      }\n    };\n  },\n  mounted: function mounted() {\n    document.onreadystatechange = function () {\n      if (document.readyState == \"complete\") {// run code here\n        //this.drawDashboard();\n      }\n    };\n  },\n  watch: {\n    isLoading: function isLoading() {\n      this.drawDashboard();\n    }\n  },\n  methods: {\n    drawDashboard: function drawDashboard() {\n      var chart1 = new google.visualization.Timeline(document.getElementById('chart')); //var data = new google.visualization.arrayToDataTable(this.chartData);\n\n      var data1 = new google.visualization.DataTable();\n      data1.addColumn({\n        type: 'string',\n        id: 'Process'\n      });\n      data1.addColumn({\n        type: 'string',\n        id: 'Runtime'\n      });\n      data1.addColumn({\n        type: 'date',\n        id: 'Start'\n      });\n      data1.addColumn({\n        type: 'date',\n        id: 'End'\n      });\n      data1.addColumn({\n        type: 'string',\n        role: 'tooltip'\n      });\n      data1.addRows(this.chartData);\n      var options1 = {\n        chartArea: {\n          left: 40,\n          width: '100%'\n        },\n        timeline: {\n          showBarLabels: false\n        },\n        width: '100%',\n        height: 600\n      };\n      google.visualization.events.addListener(chart1, 'select', function () {\n        var selection = chart1.getSelection();\n\n        if (selection.length > 0) {\n          console.log(data1.getValue(selection[0].row, 4));\n        }\n      }); //dashboard.bind(control, chart);\n\n      chart1.draw(data1, options1);\n    },\n    refactorParentProcess: function refactorParentProcess() {\n      console.log('in refactor parent process');\n      this.isLoading = true;\n      var tempProcess = {};\n      var properties = {};\n      var tempObj = {};\n      var registryID = '';\n      var tempArray = [];\n\n      for (var i in this.parentProcessData) {\n        properties = {};\n        tempObj = {};\n        registryID = this.parentProcessData[i].RegistryID;\n        tempProcess[registryID] = [];\n\n        for (var j in this.parentProcessData[i]) {\n          if (tempProcess.hasOwnProperty(registryID)) {\n            properties[j] = this.parentProcessData[i][j];\n            tempObj[j] = properties[j];\n          } else {\n            properties[j] = this.parentProcessData[i][j];\n            tempArray.push(properties[j]);\n            tempProcess[registryID] = tempArray;\n          }\n        }\n\n        tempProcess[registryID].push(tempObj);\n      }\n\n      this.parentProcessData = tempProcess;\n      this.isLoading = false;\n      console.log('out refactor parent process');\n    },\n    refactorChildProcess: function refactorChildProcess() {\n      console.log('in refactor child process');\n      this.isLoading = true;\n      var tempProcess = {};\n      var properties = {};\n      var tempObj = {};\n      var registryID = '';\n      var tempArray = [];\n\n      for (var i in this.childProcessData) {\n        properties = {};\n        registryID = this.childProcessData[i].RegistryID;\n        tempProcess[registryID] = [];\n\n        for (var j in this.childProcessData[i]) {\n          if (tempProcess.hasOwnProperty(registryID)) {\n            properties[j] = this.childProcessData[i][j];\n            tempObj[j] = properties[j];\n          } else {\n            properties[j] = this.childProcessData[i][j];\n            tempArray.push(properties[j]);\n            tempProcess[registryID] = tempArray;\n          }\n        }\n\n        tempProcess[registryID].push(tempObj);\n      }\n\n      this.childProcessData = tempProcess;\n      this.isLoading = false;\n      console.log('out refactor child process');\n    },\n    refactorParentRegistry: function refactorParentRegistry() {\n      this.isLoading = true;\n      var tempRegistry = {};\n      var properties = {};\n      var registryID = '';\n\n      for (var i in this.parentRegistryData) {\n        properties = {};\n        registryID = this.parentRegistryData[i].RegistryID;\n        tempRegistry[registryID] = {};\n\n        for (var j in this.parentRegistryData[i]) {\n          properties[j] = this.parentRegistryData[i][j];\n          tempRegistry[registryID][j] = properties[j];\n        }\n      }\n\n      this.parentRegistryData = tempRegistry;\n      this.isLoading = false;\n    },\n    refactorChildRegistry: function refactorChildRegistry() {\n      this.isLoading = true;\n      var tempRegistry = {};\n      var properties = {};\n      var registryID = '';\n\n      for (var i in this.childRegistryData) {\n        properties = {};\n        registryID = this.childRegistryData[i].RegistryID;\n        tempRegistry[registryID] = {};\n\n        for (var j in this.childRegistryData[i]) {\n          properties[j] = this.childRegistryData[i][j];\n          tempRegistry[registryID][j] = properties[j];\n        }\n      }\n\n      this.childRegistryData = tempRegistry;\n      this.isLoading = false;\n    },\n    calcRegistryBeginEndTime: function calcRegistryBeginEndTime() {\n      var registryID = '';\n      var minProcessBeginArray = [];\n      var maxProcessEndArray = [];\n\n      for (var i in this.registryData) {\n        registryID = i;\n\n        for (var j = 0; j < this.processData[registryID].length; j++) {\n          minProcessBeginArray.push(Date.parse(this.processData[registryID][j].ProcessBeginTime));\n          maxProcessEndArray.push(Date.parse(this.processData[registryID][j].ProcessEndTime));\n        }\n\n        if (minProcessBeginArray.length > 0) {\n          this.registryData[registryID].BeginTime = Math.min.apply(Math, _toConsumableArray(minProcessBeginArray));\n        }\n\n        if (maxProcessEndArray.length > 0) {\n          this.registryData[registryID].EndTime = Math.max.apply(Math, _toConsumableArray(maxProcessEndArray));\n        }\n\n        maxProcessEndArray = [];\n        minProcessBeginArray = [];\n      }\n    },\n    calcChartRange: function calcChartRange() {\n      var chartMin = [];\n      var chartMax = [];\n\n      for (var i in this.parentProcessData) {\n        for (var j in this.parentProcessData[i]) {\n          chartMin.push(this.parentProcessData[i][j].ProcessBeginTime);\n          chartMax.push(this.parentProcessData[i][j].ProcessEndTime);\n        }\n      }\n\n      this.chartOptions.hAxis.minValue = new Date(Math.min.apply(Math, chartMin));\n      this.chartOptions.hAxis.maxValue = new Date(Math.max.apply(Math, chartMax));\n    },\n    resetFilters: function resetFilters() {\n      this.activeServerFilters = [];\n      this.activeItemTypeFilters = [];\n      this.activeDatabaseFilters = [];\n    }\n  },\n  created: function created() {\n    this.isLoading = true; //this.refactorParentRegistry()\n    //this.refactorChildRegistry()\n\n    this.refactorParentProcess();\n    this.refactorChildProcess(); //this.calcChartRange()\n    //console.log(this.parentProcessData[6405640])\n\n    console.log(this.parentProcessData);\n\n    for (var i in this.parentProcessData) {\n      for (var j in this.parentProcessData[i]) {\n        //console.log(this.parentProcessData[i][j].Process)\n        this.chartData.push([this.parentProcessData[i][j].Process, String(this.parentProcessData[i][j].ProcessID), new Date(this.parentProcessData[i][j].ProcessBeginTime), new Date(this.parentProcessData[i][j].ProcessEndTime), String(this.parentProcessData[i][j].ProcessID)]);\n      }\n    } //console.log(this.chartData)\n\n\n    this.isLoading = false;\n    console.log(this.chartData);\n  }\n};",{"version":3,"sources":["Dashboard - Copy.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-container\r\n    fill-height\r\n    fluid\r\n    grid-list-xl\r\n  >\r\n  <v-toolbar\r\n      color=\"purple darken-1\"\r\n      dark\r\n      fixed\r\n      app\r\n      clipped-right\r\n    >\r\n      <v-toolbar-title\r\n        class=\"font-italic display-2\"\r\n      >iXTimeline</v-toolbar-title>\r\n      <v-spacer></v-spacer>\r\n</v-toolbar>\r\n  <v-navigation-drawer\r\n      fixed\r\n      right\r\n      clipped\r\n      app\r\n      width=\"460\"\r\n    >\r\n    <v-list>\r\n      <v-list-tile class='headertile'>\r\n        <v-list-tile-content>\r\n            <v-list-tile-title>FILTERS</v-list-tile-title>\r\n          </v-list-tile-content>\r\n      </v-list-tile>\r\n      <v-flex xs12 px-3>\r\n        <v-list-tile-content style=\"min-width: 500px;\">\r\n        <v-select\r\n          :items=\"itemTypes\"\r\n          label=\"Item Type\"\r\n          chips\r\n          deletable-chips\r\n          multiple\r\n          clearable\r\n          v-model=\"activeItemTypeFilters\"\r\n          style=\"min-width: 425px; max-width: 425px\"\r\n        ></v-select>\r\n        </v-list-tile-content>\r\n      </v-flex>\r\n      <v-flex xs12 px-3>\r\n        <v-list-tile-content style=\"min-width: 500px;\">\r\n        <v-select\r\n          :items=\"databases\"\r\n          label=\"Database\"\r\n          chips\r\n          deletable-chips\r\n          multiple\r\n          clearable\r\n          v-model=\"activeDatabaseFilters\"\r\n          style=\"min-width: 425px; max-width: 425px\"\r\n        ></v-select>\r\n        </v-list-tile-content>\r\n      </v-flex>\r\n      <v-flex xs12 px-3>\r\n        <v-list-tile-content style=\"min-width: 500px;\">\r\n        <v-select\r\n          :items=\"servers\"\r\n          label=\"Server\"\r\n          chips\r\n          deletable-chips\r\n          multiple\r\n          clearable\r\n          v-model=\"activeServerFilters\"\r\n          style=\"min-width: 425px; max-width: 425px\"\r\n        ></v-select>\r\n        </v-list-tile-content>\r\n      </v-flex>\r\n      <v-layout row pl-3 style=\"position: absolute; bottom:20px\">\r\n        <v-flex xs4 offset-xs2 mr-5>\r\n          <v-btn color=\"success\">Apply</v-btn>\r\n        </v-flex>\r\n        <v-flex xs4 ml-5>\r\n          <v-btn color=\"error\" @click=\"resetFilters()\">Clear All</v-btn>\r\n        </v-flex>\r\n        <v-spacer/>\r\n    </v-layout>\r\n    </v-list>\r\n\r\n\r\n\r\n\r\n        {{ activeItemTypeFilters }}\r\n          {{ activeDatabaseFilters }}\r\n            {{ activeServerFilters }}\r\n</v-navigation-drawer>\r\n\r\n    <v-layout wrap>\r\n    <v-flex xs11 offset-xs1 class=\"display-2\">\r\n          <span pr-0>{{selectedDate}}</span>\r\n          <v-menu offset-y>\r\n            <template v-slot:activator=\"{ on }\">\r\n              <v-btn\r\n                color=\"primary\"\r\n                dark\r\n                flat\r\n                icon\r\n                v-on=\"on\"\r\n              ><v-icon>calendar_today</v-icon>\r\n              </v-btn>\r\n            </template>\r\n                  <v-date-picker v-model=\"selectedDate\" landscape reactive></v-date-picker>\r\n          </v-menu>\r\n    </v-flex>\r\n      <v-flex\r\n        xs10\r\n        offset-xs1\r\n        v-if=\"drawTimeline\"\r\n      >\r\n      <div id=\"dashboard\" style=\"width:1200px;\">\r\n          <div id=\"chart\" style=\"position: relative; width: 1200px; height: 600px; backgroundColor: #ffffff;\"></div>\r\n          <div id=\"control\"></div>\r\n      </div>\r\n      <div id=\"junk_div\" style=\"display: none;\"></div>\r\n    </v-flex>\r\n    <v-spacer/>\r\n    <v-flex\r\n      xs10\r\n      offset-xs1\r\n      v-if=\"!drawTimeline\"\r\n    >\r\n      <v-card color=\"red lighten-1\">\r\n        <v-card-text>\r\n          <v-icon dark>report_problem</v-icon> <span class=\"white--text pl-3\" >No results found.</span>\r\n        </v-card-text>\r\n      </v-card>\r\n    </v-flex>\r\n    <v-spacer/>\r\n    </v-layout>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport processData from '../assets/PROCESS.json'\r\nimport registryData from '../assets/REGISTRY.json'\r\nimport parentRegistryData from '../assets/ParentRegistries.json'\r\nimport childRegistryData from '../assets/ChildRegistries.json'\r\nimport parentProcessData from '../assets/PROCESS.json'\r\nimport childProcessData from '../assets/ChildProcess.json'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      filters: {\r\n        itemtype: {\r\n          account: false,\r\n          audit: false,\r\n          bill: false,\r\n          business_alert: false,\r\n          CDR_file: false,\r\n          connect: false,\r\n          cycle: false,\r\n          data_file: false,\r\n          database: false,\r\n          external_data_warehouse: false,\r\n          extract: false,\r\n          finance: false,\r\n          import_export: false,\r\n          infrastructure_test: false,\r\n          ixinsight: false,\r\n          notification: false,\r\n          performance_metric: false,\r\n          route_guide: false,\r\n          standardized_CDR: false,\r\n          switch_upload: false,\r\n          system_audit: false,\r\n          trade: false,\r\n          write_off: false\r\n        }\r\n      },\r\n      itemTypes: [\r\n        'All',\r\n        'Account',\r\n        'Audit',\r\n        'Bill',\r\n        'Business Alert',\r\n        'CDR File',\r\n        'Connect',\r\n        'Cycle',\r\n        'Data File',\r\n        'Database',\r\n        'External Data Warehouse',\r\n        'Extract',\r\n        'Finance',\r\n        'Import/Export',\r\n        'Infrastructure Test',\r\n        'iXInsight',\r\n        'Notification',\r\n        'Performance Metric',\r\n        'Route Guide',\r\n        'Standardized CDR',\r\n        'Switch Upload',\r\n        'System Audit',\r\n        'Trade',\r\n        'Write Off'\r\n      ],\r\n      databases: [\r\n        'ixAdmin_Audit',\r\n        'ixAdmin_Main',\r\n        'ixAdmin_Port',\r\n        'ixAdmin_Report',\r\n        'ixAlert_Audit',\r\n        'ixAlert_Main',\r\n        'ixAlert_Mart',\r\n        'ixAudit_Audit',\r\n        'ixAudit_Main',\r\n        'ixAudit_Port',\r\n        'ixControl_Audit',\r\n        'ixControl_Client',\r\n        'ixControl_Main',\r\n        'ixControl_Port',\r\n        'ixControl_Report',\r\n        'ixControl_Utilities',\r\n        'ixCore_Audit',\r\n        'ixCore_Main',\r\n        'ixCore_Port',\r\n        'ixMart',\r\n        'ixReport_Audit',\r\n        'ixReport_Main',\r\n        'ixReport_Port',\r\n        'ixRoute_Audit',\r\n        'ixRoute_Main',\r\n        'ixRoute_Port',\r\n        'ixRoute_Report',\r\n        'ixSubscription_Main',\r\n        'ixSum',\r\n        'ixTrade_Main',\r\n        'ixTrade_Port',\r\n        'ixTrade_Audit',\r\n        'ixAEP',\r\n        'ixTranslate_Main',\r\n        'ixTranslate_Port',\r\n        'ixBill_Audit',\r\n        'ixBill_Main',\r\n        'ixBill_Port',\r\n        'ixAudit_Report',\r\n        'ixCDR_01',\r\n        'ixCDR_02',\r\n        'ixCDR_03',\r\n        'ixCDR_04',\r\n        'ixCDR_05',\r\n        'ixCDR_06',\r\n        'ixCDR_07',\r\n        'ixCDR_08',\r\n        'ixCDR_nnn',\r\n        'ixTemp',\r\n        'ixTranslate_Audit',\r\n        'ixUpload_Main',\r\n        'ixFinance_Main',\r\n        'ixFinance_Port_FT',\r\n        'ixQOS',\r\n        'ixInsight_Main',\r\n        'ixInsight_Mart',\r\n        'ixFinance_Audit',\r\n        'ixFinance_Port_ATT',\r\n        'ixFinance_Port',\r\n        'ixArchive',\r\n        'ixMart_CDR',\r\n        'ixDataLoader_INCR',\r\n        'ixDataLoader_INIT',\r\n        'ixDataLoader_Main',\r\n        'ixSubscriber_Main',\r\n        'ixSubscriber_Audit'\r\n      ],\r\n      servers: [\r\n        'Coreserver',\r\n        'Reportserver',\r\n        'Batchserver',\r\n        'CDRServer01',\r\n        'CDRServer02'\r\n      ],\r\n      drawTimeline: true,\r\n      selectedDate: '2019-06-01',\r\n      displayCalendar: false,\r\n      isLoading: true,\r\n      activeItemTypeFilters: [],\r\n      activeDatabaseFilters: [],\r\n      activeServerFilters: [],\r\n      chartData: [],\r\n      parentRegistryData: parentRegistryData,\r\n      childRegistryData: childRegistryData,\r\n      parentProcessData: parentProcessData,\r\n      childProcessData: childProcessData,\r\n      chartOptions: {\r\n        hAxis: {\r\n          minValue: new Date('2019-06-01'),\r\n          maxValue: new Date('2019-06-02')\r\n        }\r\n      },\r\n      processData: processData,\r\n      registryData: registryData,\r\n      activeData: [3719751],\r\n      tabs: 0,\r\n      list: {\r\n        0: false,\r\n        1: false,\r\n        2: false\r\n      }\r\n    }\r\n  },\r\n  mounted: function() {\r\n    document.onreadystatechange = () => {\r\n  if (document.readyState == \"complete\") {\r\n      // run code here\r\n      //this.drawDashboard();\r\n  }\r\n}\r\n  },\r\n  watch: {\r\n    isLoading: function() {\r\n      this.drawDashboard();\r\n    }\r\n  },\r\n  methods: {\r\n    drawDashboard() {\r\n      var chart1 = new google.visualization.Timeline(document.getElementById('chart'));\r\n      //var data = new google.visualization.arrayToDataTable(this.chartData);\r\n\r\n      var data1 = new google.visualization.DataTable();\r\n\r\n     data1.addColumn({ type: 'string', id: 'Process' });\r\n     data1.addColumn({ type: 'string', id: 'Runtime' });\r\n     data1.addColumn({ type: 'date', id: 'Start' });\r\n     data1.addColumn({ type: 'date', id: 'End' });\r\n     data1.addColumn({ type: 'string', role: 'tooltip'});\r\n     data1.addRows(this.chartData);\r\n\r\n     var options1 = {\r\n       chartArea: {\r\n         left: 40,\r\n         width: '100%',\r\n       },\r\n       timeline: {\r\n         showBarLabels: false,\r\n       },\r\n       width: '100%',\r\n       height: 600,\r\n     };\r\n\r\n     google.visualization.events.addListener(chart1, 'select', function () {\r\n       var selection = chart1.getSelection();\r\n       if (selection.length > 0) {\r\n         console.log(data1.getValue(selection[0].row, 4));\r\n       }\r\n     });\r\n\r\n      //dashboard.bind(control, chart);\r\n      chart1.draw(data1,options1);\r\n\r\n            },\r\n    refactorParentProcess() {\r\n      console.log('in refactor parent process')\r\n      this.isLoading = true\r\n      var tempProcess = {}\r\n      var properties = {}\r\n      var tempObj = {}\r\n      var registryID = ''\r\n      var tempArray = []\r\n      for (var i in this.parentProcessData) {\r\n        properties = {}\r\n        tempObj = {}\r\n        registryID = this.parentProcessData[i].RegistryID\r\n        tempProcess[registryID] = []\r\n        for (var j in this.parentProcessData[i]) {\r\n          if (tempProcess.hasOwnProperty(registryID)) {\r\n            properties[j] = this.parentProcessData[i][j]\r\n            tempObj[j] = properties[j]\r\n          } else {\r\n            properties[j] = this.parentProcessData[i][j]\r\n            tempArray.push(properties[j])\r\n            tempProcess[registryID] = tempArray\r\n          }\r\n        }\r\n        tempProcess[registryID].push(tempObj)\r\n      }\r\n      this.parentProcessData = tempProcess\r\n      this.isLoading = false\r\n      console.log('out refactor parent process')\r\n    },\r\n    refactorChildProcess() {\r\n      console.log('in refactor child process')\r\n      this.isLoading = true\r\n      var tempProcess = {}\r\n      var properties = {}\r\n      var tempObj = {}\r\n      var registryID = ''\r\n      var tempArray = []\r\n      for (var i in this.childProcessData) {\r\n        properties = {}\r\n        registryID = this.childProcessData[i].RegistryID\r\n        tempProcess[registryID] = []\r\n        for (var j in this.childProcessData[i]) {\r\n          if (tempProcess.hasOwnProperty(registryID)) {\r\n            properties[j] = this.childProcessData[i][j]\r\n            tempObj[j] = properties[j]\r\n          } else {\r\n            properties[j] = this.childProcessData[i][j]\r\n            tempArray.push(properties[j])\r\n            tempProcess[registryID] = tempArray\r\n          }\r\n        }\r\n        tempProcess[registryID].push(tempObj)\r\n      }\r\n      this.childProcessData = tempProcess\r\n      this.isLoading = false\r\n      console.log('out refactor child process')\r\n    },\r\n    refactorParentRegistry() {\r\n      this.isLoading = true\r\n      var tempRegistry = {}\r\n      var properties = {}\r\n      var registryID = ''\r\n      for (var i in this.parentRegistryData) {\r\n        properties = {}\r\n        registryID = this.parentRegistryData[i].RegistryID\r\n        tempRegistry[registryID] = {}\r\n        for (var j in this.parentRegistryData[i]) {\r\n            properties[j] = this.parentRegistryData[i][j]\r\n            tempRegistry[registryID][j] = properties[j]\r\n        }\r\n      }\r\n      this.parentRegistryData = tempRegistry\r\n      this.isLoading = false\r\n    },\r\n    refactorChildRegistry() {\r\n      this.isLoading = true\r\n      var tempRegistry = {}\r\n      var properties = {}\r\n      var registryID = ''\r\n      for (var i in this.childRegistryData) {\r\n        properties = {}\r\n        registryID = this.childRegistryData[i].RegistryID\r\n        tempRegistry[registryID] = {}\r\n        for (var j in this.childRegistryData[i]) {\r\n            properties[j] = this.childRegistryData[i][j]\r\n            tempRegistry[registryID][j] = properties[j]\r\n        }\r\n      }\r\n      this.childRegistryData = tempRegistry\r\n      this.isLoading = false\r\n    },\r\n    calcRegistryBeginEndTime() {\r\n      var registryID = ''\r\n      var minProcessBeginArray = []\r\n      var maxProcessEndArray = []\r\n\r\n      for (var i in this.registryData) {\r\n        registryID = i\r\n        for (var j = 0; j < this.processData[registryID].length; j++) {\r\n          minProcessBeginArray.push(Date.parse(this.processData[registryID][j].ProcessBeginTime))\r\n          maxProcessEndArray.push(Date.parse(this.processData[registryID][j].ProcessEndTime))\r\n        }\r\n        if (minProcessBeginArray.length > 0) {\r\n          this.registryData[registryID].BeginTime = Math.min(...minProcessBeginArray)\r\n\r\n        }\r\n        if (maxProcessEndArray.length > 0) {\r\n          this.registryData[registryID].EndTime = Math.max(...maxProcessEndArray)\r\n\r\n        }\r\n\r\n        maxProcessEndArray = []\r\n        minProcessBeginArray = []\r\n      }\r\n    },\r\n    calcChartRange() {\r\n      var chartMin = []\r\n      var chartMax = []\r\n\r\n      for (var i in this.parentProcessData) {\r\n        for (var j in this.parentProcessData[i]){\r\n          chartMin.push(this.parentProcessData[i][j].ProcessBeginTime)\r\n          chartMax.push(this.parentProcessData[i][j].ProcessEndTime)\r\n        }\r\n      }\r\n\r\n      this.chartOptions.hAxis.minValue = new Date(Math.min(...chartMin))\r\n      this.chartOptions.hAxis.maxValue = new Date(Math.max(...chartMax))\r\n\r\n    },\r\n    resetFilters() {\r\n      this.activeServerFilters = []\r\n      this.activeItemTypeFilters = []\r\n      this.activeDatabaseFilters = []\r\n    }\r\n  },\r\n  created: function() {\r\n    this.isLoading = true\r\n    //this.refactorParentRegistry()\r\n    //this.refactorChildRegistry()\r\n    this.refactorParentProcess()\r\n    this.refactorChildProcess()\r\n    //this.calcChartRange()\r\n\r\n    //console.log(this.parentProcessData[6405640])\r\n\r\n    console.log(this.parentProcessData)\r\n\r\n    for (var i in this.parentProcessData) {\r\n\r\n      for (var j in this.parentProcessData[i]) {\r\n        //console.log(this.parentProcessData[i][j].Process)\r\n        this.chartData.push([ this.parentProcessData[i][j].Process, String(this.parentProcessData[i][j].ProcessID), new Date(this.parentProcessData[i][j].ProcessBeginTime), new Date(this.parentProcessData[i][j].ProcessEndTime), String(this.parentProcessData[i][j].ProcessID) ])\r\n     }\r\n    }\r\n    //console.log(this.chartData)\r\n    this.isLoading = false\r\n    console.log(this.chartData)\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.headertile {\r\n  background: #EEEEEE;\r\n}\r\n\r\ntext {\r\n pointer-events: none;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views"}]}